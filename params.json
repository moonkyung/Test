{"name":"Test","tagline":"","body":"## Plot Types\r\nSix plot types of original ggplot2 are supported in ggplot2.sparkR now. More types will be updated.\r\n\r\nSince the usage of ggplot2.sparkR is exactly the same with origin ggplot2.sparkR, we could click following links to reference them in the original ggplot2 documentation.\r\n\r\n### Geoms\r\nGeoms, short for geometric objects, describe the type of plot you will produce.\r\n* [geom_bar](http://docs.ggplot2.org/current/geom_bar.html)\r\n* [geom_bin2d](http://docs.ggplot2.org/current/geom_bin2d.html)\r\n* [geom_boxplot](http://docs.ggplot2.org/current/geom_boxplot.html)\r\n* [geom_freqpoly](http://docs.ggplot2.org/current/geom_freqpoly.html)\r\n* [geom_histogram](http://docs.ggplot2.org/current/geom_histogram.html)\r\n\r\n### Statistics\r\nIt’s often useful to transform your data before plotting, and that’s what statistical transformations do.\r\n* [stat_bin](http://docs.ggplot2.org/current/stat_bin.html)\r\n* [stat_bin2d](http://docs.ggplot2.org/current/stat_bin2d.html)\r\n* [stat_boxplot](http://docs.ggplot2.org/current/stat_boxplot.html)\r\n* [stat_sum](http://docs.ggplot2.org/current/stat_sum.html)\r\n\r\n### Scales\r\n* [scale_x_log10](http://docs.ggplot2.org/current/scale_continuous.html)\r\n* [scale_y_log10](http://docs.ggplot2.org/current/scale_continuous.html)\r\n* [labs](http://docs.ggplot2.org/current/labs.html)\r\n* [xlab](http://docs.ggplot2.org/current/labs.html)\r\n* [ylab](http://docs.ggplot2.org/current/labs.html)\r\n* [xlim](http://docs.ggplot2.org/current/xylim.html)\r\n* [ylim](http://docs.ggplot2.org/current/xylim.html)\r\n\r\n### Coordinate Systems\r\n* [coord_cartesian](http://docs.ggplot2.org/current/coord_cartesian.html)\r\n* [coord_flip](http://docs.ggplot2.org/current/coord_flip.html)\r\n\r\n### Facets\r\n* [facet_grid](http://docs.ggplot2.org/current/facet_grid.html)\r\n* [facet_null](http://docs.ggplot2.org/current/facet_null.html)\r\n* [facet_wrap](http://docs.ggplot2.org/current/facet_wrap.html)\r\n\r\n### Position Adjustment\r\n* [position_dodge](http://docs.ggplot2.org/current/position_dodge.html)\r\n* [position_fill](http://docs.ggplot2.org/current/position_fill.html)\r\n* [position_stack](http://docs.ggplot2.org/current/position_stack.html)\r\n\r\n## Examples\r\nThe parameter **_data_** in examples can be either R data.frame or Spark DataFrame.\r\n\r\nIf the input data is Spark DataFrame, heavyweight data processing stages are offloaded to the Spark backend using the SparkR API.\r\n\r\n### 1. geom_bar\r\nBars, rectangles with bases on x-axis\r\n\r\n```R\r\nggplot(data, aes(x = Item, fill = Payment)) + geom_bar()\r\n```\r\n![image of bar chart](https://moonkyung.github.io/Test/bar.png)\r\n\r\n### 2. geom_histogram\r\nHistogram. Bars, rectangles with bases on x-axis using continuous data.\r\n\r\n```R\r\nggplot(data, aes(x = Price)) + geom_histogram(binwidth = 10)\r\n```\r\n![image of bar chart](https://moonkyung.github.io/Test/hist.png)\r\n\r\n### 3. stat_sum\r\nSum unique values. Useful for overplotting on scatterplots.\r\n\r\n```R\r\nggplot(data, aes(x = Item, y = Payment)) + stat_sum()\r\n```\r\n![image of bar chart](https://moonkyung.github.io/Test/stat_sum.png)\r\n\r\n### 4. geom_bin2d\r\nAdd heatmap of 2d bin counts.\r\n\r\n```R\r\nggplot(data, aes(x = Item, y = Price)) + geom_bin2d()\r\n```\r\n![image of bar chart](https://moonkyung.github.io/Test/bin2d.png)\r\n\r\n\r\n### 5. geom_boxplot\r\nCalculate components of box and whisker plot.\r\n\r\n```R\r\nggplot(data, aes(x = Item, y = Price)) + geom_boxplot()\r\n```\r\n![image of bar chart](https://moonkyung.github.io/Test/box.png)\r\n\r\n## Installation\r\n### SparkR Installation\r\n\r\n#### Build Spark\r\n\r\nBuild Spark with [Maven](http://spark.apache.org/docs/latest/building-spark.html#building-with-buildmvn) and include the `-PsparkR` profile to build the R package. For example to use the default Hadoop versions you can run\r\n```\r\n  build/mvn -DskipTests -Psparkr package\r\n```\r\n\r\n#### Using SparkR from RStudio\r\n\r\nIf you wish to use SparkR from RStudio or other R frontends you will need to set some environment variables which point SparkR to your Spark installation. For example \r\n```\r\n# Set this to where Spark is installed\r\nSys.setenv(SPARK_HOME=\"/Users/shivaram/spark\")\r\n# This line loads SparkR from the installed directory\r\n.libPaths(c(file.path(Sys.getenv(\"SPARK_HOME\"), \"R\", \"lib\"), .libPaths()))\r\nlibrary(SparkR)\r\nsc <- sparkR.init(master=\"local\")\r\n```\r\n\r\nMore details on https://github.com/apache/spark/tree/master/R\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}